name: Poll Pedestrians (NYC DOT Bi-Annual) â†’ Drive

on:
  schedule:
    # Monthly on the 1st at 06:12 UTC (approx 1:12a ET)
    - cron: "12 6 1 * *"
  workflow_dispatch: {}

concurrency:
  group: poll-pedestrians-append
  cancel-in-progress: false

jobs:
  poll:
    runs-on: ubuntu-latest
    permissions: { contents: read }
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Install rclone
        run: curl -fsSL https://rclone.org/install.sh | sudo bash

      - name: Configure rclone
        env:
          RCLONE_CONF_B64: ${{ secrets.RCLONE_CONF_B64 }}
        run: |
          mkdir -p ~/.config/rclone
          echo "$RCLONE_CONF_B64" | base64 -d > ~/.config/rclone/rclone.conf
          chmod 600 ~/.config/rclone/rclone.conf

      - name: Ensure dirs
        env:
          GDRIVE_REMOTE_NAME: ${{ secrets.GDRIVE_REMOTE_NAME }}
          GDRIVE_DIR_PEDS: ${{ vars.GDRIVE_DIR_PEDS || 'penn-station/pedestrians' }}
        run: |
          mkdir -p data/pedestrians
          rclone mkdir "${GDRIVE_REMOTE_NAME}:${GDRIVE_DIR_PEDS}/raw" || true

      - name: Poll & append
        env:
          # Drive config
          GDRIVE_REMOTE_NAME: ${{ secrets.GDRIVE_REMOTE_NAME }}
          GDRIVE_DIR_PEDS: ${{ vars.GDRIVE_DIR_PEDS || 'penn-station/pedestrians' }}
          PEDS_MASTER_NAME: ${{ vars.PEDS_MASTER_NAME || 'pedestrian_master.csv' }}

          # NYC Open Data
          NYC_PEDS_URL: ${{ vars.NYC_PEDS_URL || 'https://data.cityofnewyork.us/resource/2de2-6x2h.csv?$limit=500000' }}

          # Filters (tokens + target columns). Leave tokens blank to disable filtering.
          PEDS_FILTER: ${{ vars.PEDS_FILTER || 'PENN,34 ST,31 ST,33 ST,7 AV,8 AV' }}
          PEDS_FILTER_COLUMNS: ${{ vars.PEDS_FILTER_COLUMNS || 'location_name,location,intersection,streetname,street_1,street_2,corridor' }}
        run: python3 pollers/poll_ped_counts.py
