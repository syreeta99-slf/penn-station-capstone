name: Poll MTA Bus (Penn) → Drive

on:
  schedule:
    # Staggered with Subway (:05) and LIRR (:07)
    - cron: "9 * * * *"
    # AM peak 7–9 ET (11–13 UTC) every 10 min
    - cron: "9,19,29,39,49 11-13 * * *"
    # PM peak 16:30–18:30 ET (20–22 UTC) every 10 min
    - cron: "9,19,29,39,49 20-22 * * *"
  workflow_dispatch: {}

concurrency:
  group: poll-bus-append
  cancel-in-progress: false

jobs:
  poll:
    runs-on: ubuntu-latest
    permissions: { contents: read }
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy requests

      - name: Install rclone
        run: curl -fsSL https://rclone.org/install.sh | sudo bash

      - name: Configure rclone
        env:
          RCLONE_CONF_B64: ${{ secrets.RCLONE_CONF_B64 }}
        run: |
          mkdir -p ~/.config/rclone
          echo "$RCLONE_CONF_B64" | base64 -d > ~/.config/rclone/rclone.conf
          chmod 600 ~/.config/rclone/rclone.conf

      - name: Ensure dirs
        env:
          GDRIVE_REMOTE_NAME: ${{ secrets.GDRIVE_REMOTE_NAME }}
          GDRIVE_DIR_BUS: ${{ vars.GDRIVE_DIR_BUS || 'penn-station/bus' }}
        run: |
          mkdir -p data/bus
          rclone mkdir "${GDRIVE_REMOTE_NAME}:${GDRIVE_DIR_BUS}/raw" || true

      - name: Poll & append
        env:
          # Required
          MTA_API_KEY: ${{ secrets.MTA_API_KEY }}     # Bus Time key
          BUS_STOP_IDS: ${{ vars.BUS_STOP_IDS }}      # e.g. "MTA_401231,MTA_401361,MTA_401819,MTA_401848,MTA_404847"
          # Optional overrides
          SIRI_STOPMON_URL: "https://bustime.mta.info/api/siri/stop-monitoring.json"
          GDRIVE_REMOTE_NAME: ${{ secrets.GDRIVE_REMOTE_NAME }}
          GDRIVE_DIR_BUS: ${{ vars.GDRIVE_DIR_BUS || 'penn-station/bus' }}
          BUS_MASTER_NAME: ${{ vars.BUS_MASTER_NAME || 'bus_penn_master.csv' }}
        run: python3 pollers/poll_bus_siri.py
