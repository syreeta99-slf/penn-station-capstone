name: Poll Amtrak (NYP) → Drive

on:
  schedule:
    # Off-peak: hourly (UTC), staggered a bit to avoid NJT collisions
    - cron: "2 0-10,14-19,23 * * *"
    # AM peak 07:00–09:59 ET → 11:00–13:59 UTC (every 15 min, +2 min stagger)
    - cron: "2,17,32,47 11-13 * * *"
    # PM peak 16:30–18:30 ET → 20:30–22:30 UTC (every 15 min, +2 min stagger)
    - cron: "2,17,32,47 20-21 * * *"
    - cron: "2,17,32 22 * * *"
  workflow_dispatch: {}

concurrency:
  group: poll-amtrak-append
  cancel-in-progress: false

jobs:
  poll:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      TZ: America/New_York
      # Optional: only needed if your script supports schedule joins
      AMTRAK_GTFS_ZIP: gtfs_static/Amtrak_GTFS.zip
      # Station filter (Moynihan / New York Penn)
      AMTRAK_STATION_CODE: NYP
      # Drive folder for Amtrak (change if you keep a different structure)
      GDRIVE_DIR_AMTRAK: penn-station/amtrak
      # Remote master filename on Drive (rolling append)
      AMTRAK_MASTER_NAME: amtrak_penn_master.csv
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas

      - name: Ensure local dirs
        run: mkdir -p data/amtrak_rt/raw data/curated gtfs_static

      - name: Install rclone
        run: curl -fsSL https://rclone.org/install.sh | sudo bash

      - name: Configure rclone
        env:
          RCLONE_CONF_B64: ${{ secrets.RCLONE_CONF_B64 }}
        run: |
          mkdir -p ~/.config/rclone
          echo "$RCLONE_CONF_B64" | base64 -d > ~/.config/rclone/rclone.conf
          chmod 600 ~/.config/rclone/rclone.conf
          rclone --version

      - name: Ensure remote dirs
        env:
          GDRIVE_REMOTE_NAME: ${{ secrets.GDRIVE_REMOTE_NAME }} # e.g. "googledrive"
          GDRIVE_DIR_AMTRAK: ${{ env.GDRIVE_DIR_AMTRAK }}
        run: |
          rclone mkdir "${GDRIVE_REMOTE_NAME}:${GDRIVE_DIR_AMTRAK}/raw" || true
          rclone mkdir "${GDRIVE_REMOTE_NAME}:${GDRIVE_DIR_AMTRAK}/curated" || true

      - name: Poll & append Amtrak (NYP)
        env:
          GDRIVE_REMOTE_NAME: ${{ secrets.GDRIVE_REMOTE_NAME }}
          GDRIVE_DIR_AMTRAK: ${{ env.GDRIVE_DIR_AMTRAK }}
          AMTRAK_MASTER_NAME: ${{ env.AMTRAK_MASTER_NAME }}
          AMTRAK_STATION_CODE: ${{ env.AMTRAK_STATION_CODE }}
          AMTRAK_GTFS_ZIP: ${{ env.AMTRAK_GTFS_ZIP }}
        run: python3 pollers/poll_amtrak.py

      - name: Upload artifacts (raw + master)
        uses: actions/upload-artifact@v4
        with:
          name: amtrak_nyp_${{ github.run_id }}
          path: |
            data/amtrak_rt/raw/*
            data/curated/master_interface_dataset_amtrak.csv
          if-no-files-found: ignore

      - name: Copy local outputs to Drive (optional mirror)
        if: ${{ secrets.RCLONE_CONF_B64 != '' }}
        env:
          GDRIVE_REMOTE_NAME: ${{ secrets.GDRIVE_REMOTE_NAME }}
          GDRIVE_DIR_AMTRAK: ${{ env.GDRIVE_DIR_AMTRAK }}
        run: |
          rclone copy data/amtrak_rt/raw "${GDRIVE_REMOTE_NAME}:${GDRIVE_DIR_AMTRAK}/raw" --transfers=8 --checkers=8 --fast-list || true
          if [ -f "data/curated/master_interface_dataset_amtrak.csv" ]; then
            rclone copy "data/curated/master_interface_dataset_amtrak.csv" "${GDRIVE_REMOTE_NAME}:${GDRIVE_DIR_AMTRAK}/curated" --transfers=2 --checkers=8 --fast-list || true
          fi
